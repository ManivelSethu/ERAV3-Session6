Create a Python script that sets up a basic CI/CD pipeline for a machine learning project. Include automated testing for an ML model, model validation checks, and a simple automated deployment process. Also want to test, total parameter count, wheter batch normalization, DropOut, Fully connected layer or GAP,  used or not. I want you to make an efficient arcitectured convolutional neural network (using convolutions and fully connected layer), use MNIST as dataset (download if required), and train only for configurable number of EPOCHs. Create the code in a modular way with proper comments and all hyper parameters in a configurable way. Also have a train and test calls which prints the arcitecture, number of parameters and configurations. Also, it should print the validation/test loss and accuracy. Use tqdm. 

When you test, mention what tests you are checking for. I would like to check if model is under 20000 parameters, takes 28x28 input without any issues, has 10 outputs, and accuracy  more than or equal to 99.5%. Make all necessary files (for training as well as github actions related). Finally, I should be able to upload whole code to GitHub. and GitHub action should run all of these things to confirm and build was successful. Tell me steps to run locally as well before I push to GitHub. For deployment, add suffix to model files to get some detail on when it was trained. Github doesn't have GPU, so no downloading of GPU related files to Github and also, please include gitignore file, so if I train locally, we are not uploading datasets,or model so it is  a clean upload. 

Create all files and folder structure

